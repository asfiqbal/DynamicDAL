/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 28 11:26:21 GMT 2024
 */

package com.dilizity.dynamicDAL;

import org.junit.Test;
import static org.junit.Assert.*;
import com.dilizity.dynamicDAL.Param;
import com.dilizity.dynamicDAL.Query;
import org.apache.commons.collections4.map.ListOrderedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Query_ESTest extends Query_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Query query0 = new Query();
      query0.setSQL("}*");
      String string0 = query0.getSQL();
      assertEquals("}*", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Query query0 = new Query();
      query0.setSQL("");
      String string0 = query0.getSQL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Query query0 = new Query();
      query0.setParamMap((ListOrderedMap<String, Param>) null);
      ListOrderedMap<String, Param> listOrderedMap0 = query0.getParamMap();
      assertNull(listOrderedMap0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Query query0 = new Query();
      ListOrderedMap<String, Param> listOrderedMap0 = query0.getParamMap();
      Param param0 = new Param();
      listOrderedMap0.put("Doubles.stringConverter()", param0);
      ListOrderedMap<String, Param> listOrderedMap1 = query0.getParamMap();
      assertEquals(1, listOrderedMap1.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Query query0 = new Query();
      query0.setId("O()#");
      String string0 = query0.getId();
      assertEquals("O()#", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Query query0 = new Query();
      query0.setId("");
      String string0 = query0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Query query0 = new Query();
      String string0 = query0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Query query0 = new Query();
      String string0 = query0.getSQL();
      assertNull(string0);
  }
}
