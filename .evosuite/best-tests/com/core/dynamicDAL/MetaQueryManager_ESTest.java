/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 28 11:22:56 GMT 2024
 */

package com.dilizity.dynamicDAL;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dilizity.dynamicDAL.MetaQueryManager;
import com.dilizity.dynamicDAL.Query;
import com.dilizity.dynamicDAL.RootNode;
import com.dilizity.dynamicDAL.Schema;
import java.util.HashMap;
import java.util.concurrent.ConcurrentHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MetaQueryManager_ESTest extends MetaQueryManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      rootNode0.setSchemaMap(concurrentHashMap0);
      Schema schema0 = metaQueryManager0.getSchema("");
      assertNull(schema0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      Schema schema0 = new Schema();
      concurrentHashMap0.put("k!xz", schema0);
      rootNode0.setSchemaMap(concurrentHashMap0);
      Schema schema1 = metaQueryManager0.getSchema("k!xz");
      assertNull(schema1.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      rootNode0.setSchemaMap(concurrentHashMap0);
      int int0 = metaQueryManager0.getLoadedSchemaCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      Schema schema0 = new Schema();
      concurrentHashMap0.put("k!xz", schema0);
      rootNode0.setSchemaMap(concurrentHashMap0);
      int int0 = metaQueryManager0.getLoadedSchemaCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      Schema schema0 = new Schema();
      HashMap<String, Query> hashMap0 = new HashMap<String, Query>();
      hashMap0.put("k!xz", (Query) null);
      schema0.setQueryMap(hashMap0);
      concurrentHashMap0.put("k!xz", schema0);
      rootNode0.setSchemaMap(concurrentHashMap0);
      int int0 = metaQueryManager0.getLoadedQueryCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      // Undeclared exception!
      try { 
        metaQueryManager0.getLoadedQueryCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.core.dynamicDAL.MetaQueryManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      RootNode rootNode0 = metaQueryManager0.rootNode;
      ConcurrentHashMap<String, Schema> concurrentHashMap0 = new ConcurrentHashMap<String, Schema>();
      Schema schema0 = new Schema();
      concurrentHashMap0.put("", schema0);
      rootNode0.setSchemaMap(concurrentHashMap0);
      int int0 = metaQueryManager0.getLoadedQueryCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("src\\main\\resources\\SQLConfig.json");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      // Undeclared exception!
      try { 
        metaQueryManager0.Load();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.core.dynamicDAL.MetaQueryManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      metaQueryManager0.Load();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      MetaQueryManager metaQueryManager1 = MetaQueryManager.getInstance();
      assertSame(metaQueryManager1, metaQueryManager0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      // Undeclared exception!
      try { 
        metaQueryManager0.getLoadedSchemaCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.core.dynamicDAL.MetaQueryManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetaQueryManager metaQueryManager0 = MetaQueryManager.getInstance();
      // Undeclared exception!
      try { 
        metaQueryManager0.getSchema("<(.DVMNx_izy5$=*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.core.dynamicDAL.RootNode", e);
      }
  }
}
