/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 28 11:24:58 GMT 2024
 */

package com.dilizity.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dilizity.util.FnTraceWrap;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatFlagsException;
import java.util.IllegalFormatWidthException;
import java.util.MissingFormatArgumentException;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FnTraceWrap_ESTest extends FnTraceWrap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      fnTraceWrap0.traceMessage("", objectArray0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("Y4([k6u{KFP%;B7BO", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = ';'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      Object[] objectArray1 = new Object[3];
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("q%-gUl^Q)", objectArray1);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-g
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("8*EgoZ7 %ES.aw*Fh|T", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%E'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("LW5!aF9oJ%7ndw(v4L", objectArray0);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 7
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = object0;
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage(";?M%c?$WVwnQ_JbZ| ", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // c != java.lang.Object
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap();
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("M?2([)pQ%#CrHqCH9b", (Object[]) null);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = c, Flags = #
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = objectArray0[0];
      objectArray0[3] = objectArray0[1];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      FnTraceWrap fnTraceWrap0 = null;
      try {
        fnTraceWrap0 = new FnTraceWrap(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap(objectArray0);
      fnTraceWrap0.close();
      fnTraceWrap0.close();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FnTraceWrap fnTraceWrap0 = new FnTraceWrap();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try { 
        fnTraceWrap0.traceMessage("DwC&w/ZZ@%+(%<hb(z", objectArray0);
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = '+('
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }
}
