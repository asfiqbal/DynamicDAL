/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 28 11:25:40 GMT 2024
 */

package com.dilizity.dynamicDAL;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dilizity.dynamicDAL.Query;
import com.dilizity.dynamicDAL.Schema;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.collections4.map.ListOrderedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Schema_ESTest extends Schema_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Schema schema0 = new Schema();
      HashMap<String, Query> hashMap0 = new HashMap<String, Query>();
      ListOrderedMap<String, Query> listOrderedMap0 = ListOrderedMap.listOrderedMap((Map<String, Query>) hashMap0);
      Query query0 = new Query();
      listOrderedMap0.put(0, "", query0);
      schema0.setQueryMap(listOrderedMap0);
      Query query1 = schema0.getQueryMap("");
      assertNull(query1.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setQueryMap((Map<String, Query>) null);
      Map<String, Query> map0 = schema0.getQueryMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Schema schema0 = new Schema();
      HashMap<String, Query> hashMap0 = new HashMap<String, Query>();
      ListOrderedMap<String, Query> listOrderedMap0 = ListOrderedMap.listOrderedMap((Map<String, Query>) hashMap0);
      Query query0 = new Query();
      listOrderedMap0.put(0, "", query0);
      schema0.setQueryMap(listOrderedMap0);
      Map<String, Query> map0 = schema0.getQueryMap();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setProvider(";:U_G@.&}zy");
      String string0 = schema0.getProvider();
      assertEquals(";:U_G@.&}zy", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setProvider("");
      String string0 = schema0.getProvider();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setName("");
      String string0 = schema0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setDataSource("~X8rMIY^n)R-G");
      String string0 = schema0.getDataSource();
      assertEquals("~X8rMIY^n)R-G", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setDataSource("");
      String string0 = schema0.getDataSource();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setQueryMap((Map<String, Query>) null);
      // Undeclared exception!
      try { 
        schema0.getQueryMap("Q=VU|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.core.dynamicDAL.Schema", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Schema schema0 = new Schema();
      Map<String, Query> map0 = schema0.getQueryMap();
      schema0.setQueryMap(map0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Schema schema0 = new Schema();
      String string0 = schema0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Schema schema0 = new Schema();
      Query query0 = schema0.getQueryMap("Q=VU|");
      assertNull(query0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Schema schema0 = new Schema();
      String string0 = schema0.getDataSource();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Schema schema0 = new Schema();
      schema0.setName(".e|-=");
      String string0 = schema0.getName();
      assertEquals(".e|-=", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Schema schema0 = new Schema();
      String string0 = schema0.getProvider();
      assertNull(string0);
  }
}
